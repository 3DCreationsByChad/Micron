# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Micron Cfg for BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Thermistor types                     [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section



#####################################################################
#    Includes
#####################################################################
[include macros.cfg]
[include mainsail.cfg]
[include klicky/klicky-probe.cfg]

#####################################################################
#    User Variables
#####################################################################
#[gcode_macro _USER_VARIABLE]
; x-18, y-0  ; nozzle endstop
; x-(147-87)  ; dock 
# x (147-124), y (157-132) ; klicky-switch-body-at-nozzle-probe-position


#####################################################################
#   Top-Level Settings
#####################################################################
# Obtain MCU paths by "ls -l /dev/serial/by-id/". 
# Some Arduinos clones (CH340) may require using "ls -l /dev/serial/by-path/"
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_23003E00095053424E363420-if00

################################

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 3000
max_accel_to_decel: 3000
max_z_velocity: 15
max_z_accel: 350
square_corner_velocity: 5

[idle_timeout]
gcode:
	G91            ; relative positioning
	G1 Z5 F18000.0 ; move up 5mm
	G90            ; absolute positioning
	; park nozzle at rear
	G1 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F18000.0
	OFF            ; turn everything off
# 2 hrs
timeout: 7200

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
[stepper_x]
#MOT2_EN=PG5,  MOT2_STEP=PF11, MOT2_DIR=PG3,  MOT2_CS=PC6,   # MOTOR2
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
microsteps: 32
rotation_distance: 32
full_steps_per_rotation:200  
homing_positive_dir: true
position_min: 0
position_endstop: 117
position_max: 117
endstop_pin: tmc2209_stepper_x:virtual_endstop
#homing_retract_dist: 5  # with sensorless homing, can't use retract dist.
homing_retract_dist: 0
homing_speed: 100

# B motor (left)
[tmc2209 stepper_x]
uart_pin: PC6
interpolate: false
run_current: 0.6
sense_resistor: 0.110

diag_pin: PG10    # use the pin that correlates to the PXDIAG pin from the stepper
driver_SGTHRS: 130 # 255 is most sensitive value, 0 is least sensitive
stealthchop_threshold: 0


[stepper_y]
#MOT3_EN=PA0,  MOT3_STEP=PG4,  MOT3_DIR=PC1,  MOT3_CS=PC7,   # MOTOR3
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
microsteps: 32
rotation_distance: 32   ; rotation_distance = <belt_pitch> * <number_of_teeth_on_pulley>
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: 128
position_max: 128
homing_speed: 100
homing_retract_dist: 0

# A motor (right)
[tmc2209 stepper_y]
uart_pin: PC7
interpolate: false
run_current: 0.6
#hold_current:
sense_resistor: 0.110

diag_pin: PG11    # use the pin that correlates to the PXDIAG pin from the stepper
driver_SGTHRS: 130 # 255 is most sensitive value, 0 is least sensitive
stealthchop_threshold: 0



#####################################################################
#   Z Stepper Settings
#####################################################################
# Z0 Stepper - Front Left on MOTOR1
[stepper_z]
#MOT4_EN=PG2,  MOT4_STEP=PF9,  MOT4_DIR=PF10, MOT4_CS=PF2,   # MOTOR4
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
endstop_pin: PG13
microsteps: 32
rotation_distance: 32
gear_ratio: 64:16
homing_speed: 12
second_homing_speed: 1
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
position_endstop: -0.5
position_min: -5
position_max: 120

# Z0 Stepper - Front Left
[tmc2209 stepper_z]
uart_pin: PF2
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0


# Z1 Stepper - Rear Left on MOTOR3
[stepper_z1]
#MOT5_EN=PF1,  MOT5_STEP=PC13, MOT5_DIR=PF0,  MOT5_CS=PE4,   # MOTOR5
step_pin: PC13
dir_pin: PF0
enable_pin: !PF1
microsteps: 32
rotation_distance: 32
gear_ratio: 64:16

# Z1 Stepper - Rear Left
[tmc2209 stepper_z1]
uart_pin: PE4
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0


# Z2 Stepper - Rear Right on MOTOR4
[stepper_z2]
#MOT6_EN=PD4,  MOT6_STEP=PE2,  MOT6_DIR=PE3,  MOT6_CS=PE1,   # MOTOR6
step_pin: PE2
dir_pin: !PE3
enable_pin: !PD4
microsteps: 32
rotation_distance: 32
gear_ratio: 64:16

# Z2 Stepper - Rear Right
[tmc2209 stepper_z2]
uart_pin: PE1
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0


# Z3 Stepper - Front Right on MOTOR5
[stepper_z3]
#MOT7_EN=PE0,  MOT7_STEP=PE6,  MOT7_DIR=PA14, MOT7_CS=PD3,   # MOTOR7
step_pin: PE6
dir_pin: PA14
enable_pin: !PE0
microsteps: 32
rotation_distance: 32
gear_ratio: 64:16

# Z3 Stepper - Front Right
[tmc2209 stepper_z3]
uart_pin: PD3
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0


[extruder]
#MOT1_EN=PF15, MOT1_STEP=PG0,  MOT1_DIR=PG1,  MOT1_CS=PD11,  # MOTOR1
step_pin: PG0
dir_pin: !PG1
enable_pin: !PF15
heater_pin: PA2 # HE0
sensor_pin: PF4
rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
gear_ratio: 50:10              #BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.750
sensor_type: Generic 3950
min_temp: 0
max_temp: 290
#min_temp: -273.15  # when running the gantry without the hotend attached.
#max_temp: 1000     # use these instead so Klipper doesn't have a fit.
#min_extrude_temp: 170
max_power: 1.0
#control: pid
#pid_Kp: 28.182
#pid_Ki: 1.978
#pid_Kd: 100.397
#max_extrude_only_distance: 780
##  Try to keep pressure_advance below 1.0
#pressure_advance: 0.05
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

[tmc2209 extruder]
uart_pin: PD11
interpolate: false
run_current: 0.3
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################


[heater_bed]
heater_pin: PA1
sensor_type: Generic 3950
sensor_pin: PF3
##	Adjust Max Power so your heater doesn't warp your bed
max_power:  1.0
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 0
max_temp: 100

[temperature_sensor octopus]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

#####################################################################
#   Probe
#####################################################################

[bed_mesh]
speed: 300
horizontal_move_z: 10
mesh_min: 5,5
mesh_max: 115,115
probe_count: 3,3
relative_reference_index: 4
algorithm: bicubic
mesh_pps: 2,2

[probe]
pin: PG14
z_offset: 0
#x_offset: 0
#y_offset: 26.0
#z_offset: 0
#speed: 10.0
#samples: 3
#samples_result: median
#sample_retract_dist: 3.0
#samples_tolerance: 0.006
#samples_tolerance_retries: 3

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[quad_gantry_level]
gantry_corners:
    -50,-4.5
    170,180
    #-35,0
    #150,177
#	Probe points
points:
    5,5
    5,80
    110,80
    110,5
    #25,0
    #25,70
    #90,70
    #90,0
speed: 100
horizontal_move_z: 15
retries: 5
retry_tolerance: 0.0075
max_adjust: 10


# If doing sensorless homing, then the 'safe_z_home' section must be commented out,
# and the 'homing_override' section must be uncommented.

#[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 60,123) after going through Z Endstop Pin
##  Location Definition step.
# home_xy_position:-10,-10
# speed:100
# z_hop:10

[homing_override]
axes: xyz
set_position_x: 60
set_position_y: 60
set_position_z: 0
gcode: 
  {% set driver_config = printer.configfile.settings['tmc2209 stepper_y'] %}
  {% set RUN_CUR = driver_config.run_current|float %}
  ;#{% set HOME_CUR = 0.15 %}  #{% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
  ;#{% if home_all or 'X' in params %}
  G91 # incremental
  ;#SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
  ;#SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}
  #G0 z+15
  G0 x-20 y-20
  ;#{% set HOME_CUR = 0.7 %}  #{% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
  ;#{% if home_all or 'X' in params %}
  G91 # incremental
  #SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
  #SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}
  #SET_TMC_CURRENT STEPPER=stepper_z CURRENT={HOME_CUR}
  #SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={HOME_CUR}
  #SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={HOME_CUR}
  #SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={HOME_CUR}
  G4 P2000

  ;#G0 x-200 F4800
  ;#G0 y-200 F4800
  ;#SET_KINEMATIC_POSITION X=0 Y=0
  ;#G0 X+200 F4800
  ;#G0 Y+200 F4800
  M114
  G90
  G28 X0
;#_SENSORLESS_HOME_X
  ;#{% endif %}
  ;#{% if home_all or 'Y' in params %}
  ;#  {% if home_all or 'X' in params %}
      G91
      G0 X-10 Y-10
      G4 P2000
  M114
      G90
   ;# {% endif %}
    G28 Y0
;#_SENSORLESS_HOME_Y
  M114
  ;#{% endif %}
  ;#{% if home_all or 'Z' in params %}
    G90
    G0 X{printer.toolhead.axis_maximum.x-18} Y{printer.toolhead.axis_maximum.y}
    G28 Z0
    G1 Z20
  M114
  ;#{% endif %}
  ;SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR}
  ;SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR}
  ;SET_TMC_CURRENT STEPPER=stepper_z CURRENT={RUN_CUR}
  ;SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={RUN_CUR}
  ;SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={RUN_CUR}
  ;SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={RUN_CUR}

#####################################################################
#   Fan Control
#####################################################################

[fan]
##	Print Cooling Fan - CNC_FAN0
pin: PE5
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
#	Hotend Fan - CNC_FAN1
pin: PA8
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
#	If you are experiencing back flow, you can reduce fan_speed
fan_speed: 1.0

#Controller Fan
[output_pin controller_fan]
pin: !PD12
pwm: true
shutdown_value: 1
value: 0.6


########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

##  Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##  mini12864 LCD Display
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
#contrast: 63
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

#[neopixel btt_mini12864]
##  To control Neopixel RGB in mini12864 display
#pin: EXP1_6
#chain_count: 3
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------


## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

#####################################################################
#   Macros
#####################################################################

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    G0 X57.5 Y61.5 Z30 F3600
    RESTORE_GCODE_STATE NAME=STATE_G32

[delayed_gcode delayed_turnoff_heaters]
initial_duration: 0
gcode:
   TURN_OFF_HEATERS
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    G32                            ; home all axes
    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed
    UPDATE_DELAYED_GCODE ID=delayed_turnoff_heaters DURATION=300

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    #TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 10} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    #BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    UPDATE_DELAYED_GCODE ID=delayed_turnoff_heaters DURATION=300

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 28.767
#*# pid_ki = 2.019
#*# pid_kd = 102.484
#*#
#*# [stepper_z]
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 62.149
#*# pid_ki = 2.354
#*# pid_kd = 410.186
